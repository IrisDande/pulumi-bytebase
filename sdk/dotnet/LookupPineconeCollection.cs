// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace bytebaseDatabase.bytebase
{
    public static class LookupbytebaseCollection
    {
        /// <summary>
        /// The result of a get operation on a bytebase collection.
        /// </summary>
        public static Task<LookupbytebaseCollectionResult> InvokeAsync(LookupbytebaseCollectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<LookupbytebaseCollectionResult>("bytebase:index:lookupbytebaseCollection", args ?? new LookupbytebaseCollectionArgs(), options.WithDefaults());

        /// <summary>
        /// The result of a get operation on a bytebase collection.
        /// </summary>
        public static Output<LookupbytebaseCollectionResult> Invoke(LookupbytebaseCollectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<LookupbytebaseCollectionResult>("bytebase:index:lookupbytebaseCollection", args ?? new LookupbytebaseCollectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class LookupbytebaseCollectionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the bytebase collection.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public LookupbytebaseCollectionArgs()
        {
        }
        public static new LookupbytebaseCollectionArgs Empty => new LookupbytebaseCollectionArgs();
    }

    public sealed class LookupbytebaseCollectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the bytebase collection.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public LookupbytebaseCollectionInvokeArgs()
        {
        }
        public static new LookupbytebaseCollectionInvokeArgs Empty => new LookupbytebaseCollectionInvokeArgs();
    }


    [OutputType]
    public sealed class LookupbytebaseCollectionResult
    {
        /// <summary>
        /// The dimension of the vectors stored in each record held in the collection.
        /// </summary>
        public readonly int Dimension;
        /// <summary>
        /// The environment where the collection is hosted.
        /// </summary>
        public readonly string Environment;
        /// <summary>
        /// The name of the collection to be created.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The size of the collection in bytes.
        /// </summary>
        public readonly int Size;
        /// <summary>
        /// The name of the index to be used as the source for the collection.
        /// </summary>
        public readonly string Source;
        /// <summary>
        /// The number of records stored in the collection.
        /// </summary>
        public readonly int VectorCount;

        [OutputConstructor]
        private LookupbytebaseCollectionResult(
            int dimension,

            string environment,

            string name,

            int size,

            string source,

            int vectorCount)
        {
            Dimension = dimension;
            Environment = environment;
            Name = name;
            Size = size;
            Source = source;
            VectorCount = vectorCount;
        }
    }
}
